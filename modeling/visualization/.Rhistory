if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (any(1:5 == x)||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (1:5 == x||x==5) print('Yes') else print('No')
x <- floor(runif(1,1,6))
print(x)
if (1:5 == x|x==5) print('Yes') else print('No')
data(precip)
precip
name(precip)
names(precip)
?grepl
?median
?factor
?order
survey_df = data.frame(likert = c('agree', 'strongly agree', 'disagree', 'agree', 'strongly disagree', 'disagree'),
response = c(1, 2, 3, NA, 8, 0))
survey_df
survey_df$likert <- factor(survey_df$likert, levels = levels)
survey_df <- survey_df[order(survey_df$response)]
levels = c("strongly disagree", "disagree","agree", "strongly agree")
survey_df$likert <- factor(survey_df$likert, levels = levels)
survey_df <- survey_df[order(survey_df$response)]
?melt
require(reshape2)
?melt
sd(c(11,11,12,16,20,21,10,16,17,13))/sqrt(10)
shiny::runApp('C:/Users/zhaoz/group-inference/modeling/visualization')
View(dim.comp.1)
View(grp.comp.1)
View(grp.comp.2)
View(grp.comp.3)
View(grp.comp.2)
View(dim.comp.2)
View(dim.comp.3)
View(grp.comp.2)
View(grp.comp.3)
View(grp.comp.1)
a <- cbind(dim.comp.1$value,dim.comp.2$value,dim.comp.3$value, grp.comp.1$value,grp.comp.2$value,grp.comp.3$value)
a <- a %>% drop_na()
require(dplyr)
a %>% drop_na()
require(tidyr)
a %>% drop_na()
a %>% drop_na(.)
a
a %>% as.data.frame() %>% drop_na()
b <- a %>% as.data.frame() %>% drop_na()
cor(b)
# re-numbering the components to match across models based on highest correlation
allval <- cbind(dim.comp.1$value,dim.comp.2$value,dim.comp.3$value,
grp.comp.1$value,grp.comp.2$value,grp.comp.3$value)
allcor <- allval %>% as.data.frame() %>% drop_na() %>% cor()
allcor
allcor[1]
allcor[1,:]
allcor[1,]
allcor[1,] == max(allcor[1,])
upper(allcor)
toupper(allcor)
diag(allcor)
diag(allcor) <- 0
allcor
diag(allcor) <- -1
which(allcor[1,] == max(allcor[1,]))
allcor
colnames(allcor) <- c('dim.comp.1','dim.comp.2','dim.comp.3',
'grp.comp.1','grp.comp.2','grp.comp.3')
allcor
which(allcor[1,] == max(allcor[1,4:6]))
#match for dim 1
grp.comp.1_ <- get(colnames(allcor)[which(allcor[1,] == max(allcor[1,4:6]))])
grp.comp.1_
allcor %>% select(!4)
allcor %>% dplyr::select(!4)
allcor
allcor <- allval %>% as.data.frame() %>% drop_na() %>% cor() %>% as.data.frame()
allcor %>% dplyr::select(!4)
allcor <- allcor %>% select(!which(allcor[1,] == max(allcor[1,4:6]))])
allcor <- allcor %>% select(!which(allcor[1,] == max(allcor[1,4:6])))
allcor
#match for dim 2
grp.comp.2_ <- get(colnames(allcor)[which(allcor[1,] == max(allcor[1,4:5]))])
allcor <- allcor %>% select(!which(allcor[1,] == max(allcor[1,4:5])))
colnames(allcor)
require(ggplot2)
require(dplyr)
require(tidyr)
require(ggpubr)
require(cowplot)
# load in latent components
grp.comp.1 <- read.csv('grp_comp_1.csv')
grp.comp.2 <- read.csv('grp_comp_2.csv')
grp.comp.3 <- read.csv('grp_comp_3.csv')
dim.comp.1 <- read.csv('dim_comp_1.csv')
dim.comp.2 <- read.csv('dim_comp_2.csv')
dim.comp.3 <- read.csv('dim_comp_3.csv')
# re-numbering the components to match across models based on highest correlation
allval <- cbind(dim.comp.1$value,dim.comp.2$value,dim.comp.3$value,
grp.comp.1$value,grp.comp.2$value,grp.comp.3$value)
allcor <- allval %>% as.data.frame() %>% drop_na() %>% cor() %>% as.data.frame()
colnames(allcor) <- c('dim.comp.1','dim.comp.2','dim.comp.3',
'grp.comp.1','grp.comp.2','grp.comp.3')
diag(allcor) <- -1
setwd("C:/Users/zhaoz/group-inference/modeling/visualization")
require(ggplot2)
require(dplyr)
require(tidyr)
require(ggpubr)
require(cowplot)
# load in latent components
grp.comp.1 <- read.csv('grp_comp_1.csv')
grp.comp.2 <- read.csv('grp_comp_2.csv')
grp.comp.3 <- read.csv('grp_comp_3.csv')
dim.comp.1 <- read.csv('dim_comp_1.csv')
dim.comp.2 <- read.csv('dim_comp_2.csv')
dim.comp.3 <- read.csv('dim_comp_3.csv')
# re-numbering the components to match across models based on highest correlation
allval <- cbind(dim.comp.1$value,dim.comp.2$value,dim.comp.3$value,
grp.comp.1$value,grp.comp.2$value,grp.comp.3$value)
allcor <- allval %>% as.data.frame() %>% drop_na() %>% cor() %>% as.data.frame()
colnames(allcor) <- c('dim.comp.1','dim.comp.2','dim.comp.3',
'grp.comp.1','grp.comp.2','grp.comp.3')
diag(allcor) <- -1
#match for dim 1
grp.comp.1_ <- get(colnames(allcor)[which(allcor[1,] == max(allcor[1,4:6]))])
allcor <- allcor %>% select(!which(allcor[1,] == max(allcor[1,4:6])))
#match for dim 2
grp.comp.2_ <- get(colnames(allcor)[which(allcor[1,] == max(allcor[1,4:5]))])
allcor <- allcor %>% select(!which(allcor[1,] == max(allcor[1,4:5])))
# match for dim 3
grp.comp.3_ <- get(colnames(allcor[4]))
runApp()
runApp()
require(ggplot2)
require(dplyr)
require(tidyr)
require(ggpubr)
require(cowplot)
# load in latent components ------
grp.comp.1 <- read.csv('grp_comp_1.csv')
grp.comp.2 <- read.csv('grp_comp_2.csv')
grp.comp.3 <- read.csv('grp_comp_3.csv')
dim.comp.1 <- read.csv('dim_comp_1.csv')
dim.comp.2 <- read.csv('dim_comp_2.csv')
dim.comp.3 <- read.csv('dim_comp_3.csv')
# read in infer_unobserved
df <- read.csv('infer_unobserved.csv')
# re-numbering the components to match across models based on highest correlation -----
allval <- cbind(dim.comp.1$value,dim.comp.2$value,dim.comp.3$value,
grp.comp.1$value,grp.comp.2$value,grp.comp.3$value)
allcor <- allval %>% as.data.frame() %>% drop_na() %>% cor() %>% as.data.frame()
colnames(allcor) <- c('dim.comp.1','dim.comp.2','dim.comp.3',
'grp.comp.1','grp.comp.2','grp.comp.3')
diag(allcor) <- -1
#match for dim 1
grp.comp.1_ <- get(colnames(allcor)[which(allcor[1,] == max(allcor[1,4:6]))])
allcor <- allcor %>% select(!which(allcor[1,] == max(allcor[1,4:6])))
#match for dim 2
grp.comp.2_ <- get(colnames(allcor)[which(allcor[2,] == max(allcor[2,4:5]))])
allcor <- allcor %>% select(!which(allcor[1,] == max(allcor[1,4:5])))
# match for dim 3
grp.comp.3_ <- get(colnames(allcor[4]))
grp.comp.1 <- grp.comp.1_
grp.comp.2 <- grp.comp.2_
grp.comp.3 <- grp.comp.3_
runApp()
require(ggplot2)
require(dplyr)
require(tidyr)
require(ggpubr)
require(cowplot)
# load in latent components ------
grp.comp.1 <- read.csv('grp_comp_1.csv')
grp.comp.2 <- read.csv('grp_comp_2.csv')
grp.comp.3 <- read.csv('grp_comp_3.csv')
dim.comp.1 <- read.csv('dim_comp_1.csv')
dim.comp.2 <- read.csv('dim_comp_2.csv')
dim.comp.3 <- read.csv('dim_comp_3.csv')
# read in infer_unobserved
df <- read.csv('infer_unobserved.csv')
# re-numbering the components to match across models based on highest correlation -----
allval <- cbind(dim.comp.1$value,dim.comp.2$value,dim.comp.3$value,
grp.comp.1$value,grp.comp.2$value,grp.comp.3$value)
allcor <- allval %>% as.data.frame() %>% drop_na() %>% cor() %>% as.data.frame()
colnames(allcor) <- c('dim.comp.1','dim.comp.2','dim.comp.3',
'grp.comp.1','grp.comp.2','grp.comp.3')
diag(allcor) <- -1
runApp()
require(ggplot2)
require(dplyr)
require(tidyr)
require(ggpubr)
require(cowplot)
# load in latent components ------
grp.comp.1 <- read.csv('grp_comp_1.csv')
grp.comp.2 <- read.csv('grp_comp_2.csv')
grp.comp.3 <- read.csv('grp_comp_3.csv')
dim.comp.1 <- read.csv('dim_comp_1.csv')
dim.comp.2 <- read.csv('dim_comp_2.csv')
dim.comp.3 <- read.csv('dim_comp_3.csv')
# read in infer_unobserved
df <- read.csv('infer_unobserved.csv')
# re-numbering the components to match across models based on highest correlation -----
allval <- cbind(dim.comp.1$value,dim.comp.2$value,dim.comp.3$value,
grp.comp.1$value,grp.comp.2$value,grp.comp.3$value)
allcor <- allval %>% as.data.frame() %>% drop_na() %>% cor() %>% as.data.frame()
colnames(allcor) <- c('dim.comp.1','dim.comp.2','dim.comp.3',
'grp.comp.1','grp.comp.2','grp.comp.3')
diag(allcor) <- -1
colnames(allcor)[which(allcor[1,] == max(allcor[1,4:6]))]
get(colnames(allcor)[which(allcor[1,] == max(allcor[1,4:6]))])
#match for dim 1
grp.comp.1_ <- get(colnames(allcor)[which(allcor[1,] == max(allcor[1,4:6]))])
which(allcor[1,] == max(allcor[1,4:6]))
allcor <- allcor %>% select(!which(allcor[1,] == max(allcor[1,4:6])))
colnames(allcor)
which(allcor[2,] == max(allcor[2,4:5]))]
which(allcor[2,] == max(allcor[2,4:5]))
colnames(allcor)[which(allcor[2,] == max(allcor[2,4:5]))]
allcor <- allcor %>% select(!which(allcor[2,] == max(allcor[2,4:5])))
runApp()
require(ggplot2)
require(dplyr)
require(tidyr)
require(ggpubr)
require(cowplot)
# load in latent components ------
grp.comp.1 <- read.csv('grp_comp_1.csv')
grp.comp.2 <- read.csv('grp_comp_2.csv')
grp.comp.3 <- read.csv('grp_comp_3.csv')
dim.comp.1 <- read.csv('dim_comp_1.csv')
dim.comp.2 <- read.csv('dim_comp_2.csv')
dim.comp.3 <- read.csv('dim_comp_3.csv')
# read in infer_unobserved
df <- read.csv('infer_unobserved.csv')
# re-numbering the components to match across models based on highest correlation -----
allval <- cbind(dim.comp.1$value,dim.comp.2$value,dim.comp.3$value,
grp.comp.1$value,grp.comp.2$value,grp.comp.3$value)
allcor <- allval %>% as.data.frame() %>% drop_na() %>% cor() %>% as.data.frame()
colnames(allcor) <- c('dim.comp.1','dim.comp.2','dim.comp.3',
'grp.comp.1','grp.comp.2','grp.comp.3')
diag(allcor) <- -1
allcor
crosscor <- allcor[1:3,4:6]
which(crosscor == max(crosscor))
crosscor[6]
rownames(allcor) <- colnames(allcor)
allcor
#match for dim 1
grp.comp.1_ <- get(rownames(allcor)[which(allcor[,4] == max(allcor[1:3,4]))])
allcor <- allcor %>% select(!which(allcor[,4] == max(allcor[1:3,4])))
allcor
allcor <- allval %>% as.data.frame() %>% drop_na() %>% cor() %>% as.data.frame()
colnames(allcor) <- c('dim.comp.1','dim.comp.2','dim.comp.3',
'grp.comp.1','grp.comp.2','grp.comp.3')
rownames(allcor) <- colnames(allcor)
diag(allcor) <- -1
allcor
rownames(allcor)[which(allcor[,1] == max(allcor[4:6,1]))]
allcor <- allcor %>% select(!which(allcor[,1] == max(allcor[4:6,1])))
allcor
allcor <- allcor %>% filter(!which(allcor[,1] == max(allcor[4:6,1])))
allcor
require(ggplot2)
require(dplyr)
require(tidyr)
require(ggpubr)
require(cowplot)
# load in latent components ------
grp.comp.1 <- read.csv('grp_comp_1.csv')
grp.comp.2 <- read.csv('grp_comp_2.csv')
grp.comp.3 <- read.csv('grp_comp_3.csv')
dim.comp.1 <- read.csv('dim_comp_1.csv')
dim.comp.2 <- read.csv('dim_comp_2.csv')
dim.comp.3 <- read.csv('dim_comp_3.csv')
# read in infer_unobserved
df <- read.csv('infer_unobserved.csv')
# re-numbering the components to match across models based on highest correlation (very hacky)-----
allval <- cbind(dim.comp.1$value,dim.comp.2$value,dim.comp.3$value,
grp.comp.1$value,grp.comp.2$value,grp.comp.3$value)
allcor <- allval %>% as.data.frame() %>% drop_na() %>% cor() %>% as.data.frame()
colnames(allcor) <- c('dim.comp.1','dim.comp.2','dim.comp.3',
'grp.comp.1','grp.comp.2','grp.comp.3')
rownames(allcor) <- colnames(allcor)
diag(allcor) <- -1
#match for dim 1
grp.comp.1_ <- get(rownames(allcor)[which(allcor[,1] == max(allcor[4:6,1]))])
allcor <- allcor %>% filter(!which(allcor[,1] == max(allcor[4:6,1])))
allcor
rownames(allcor)[which(allcor[,1] == max(allcor[4:6,1]))]
allcor <- allval %>% as.data.frame() %>% drop_na() %>% cor() %>% as.data.frame()
colnames(allcor) <- c('dim.comp.1','dim.comp.2','dim.comp.3',
'grp.comp.1','grp.comp.2','grp.comp.3')
rownames(allcor) <- colnames(allcor)
diag(allcor) <- -1
rownames(allcor)[which(allcor[,1] == max(allcor[4:6,1]))]
rowname(allcor) != rownames(allcor)[which(allcor[,1] == max(allcor[4:6,1]))]
rownames(allcor) != rownames(allcor)[which(allcor[,1] == max(allcor[4:6,1]))]
#match for dim 1
grp.comp.1_ <- get(rownames(allcor)[which(allcor[,1] == max(allcor[4:6,1]))])
allcor <- allcor[rownames(allcor) != rownames(allcor)[which(allcor[,1] == max(allcor[4:6,1]))],]
allcor
#match for dim 1
grp.comp.1_ <- get(rownames(allcor)[which(allcor[,1] == max(allcor[4:6,1]))])
allcor <- allcor[rownames(allcor) != rownames(allcor)[which(allcor[,1] == max(allcor[4:6,1]))],]
allcor <- allval %>% as.data.frame() %>% drop_na() %>% cor() %>% as.data.frame()
colnames(allcor) <- c('dim.comp.1','dim.comp.2','dim.comp.3',
'grp.comp.1','grp.comp.2','grp.comp.3')
rownames(allcor) <- colnames(allcor)
diag(allcor) <- -1
#match for dim 1
grp.comp.1_ <- get(rownames(allcor)[which(allcor[,1] == max(allcor[4:6,1]))])
allcor <- allcor[rownames(allcor) != rownames(allcor)[which(allcor[,1] == max(allcor[4:6,1]))],]
#match for dim 2
grp.comp.2_ <- get(rownames(allcor)[which(allcor[,2] == max(allcor[4:5,2]))])
allcor <- allcor[rownames(allcor) != rownames(allcor)[which(allcor[,2] == max(allcor[4:5,2]))],]
# match for dim 3
grp.comp.3_ <- get(rownames(allcor)[4])
grp.comp.1 <- grp.comp.1_
grp.comp.2 <- grp.comp.2_
grp.comp.3 <- grp.comp.3_
runApp()
require(ggplot2)
require(dplyr)
require(tidyr)
require(ggpubr)
require(cowplot)
# load in latent components ------
grp.comp.1 <- read.csv('grp_comp_1.csv')
grp.comp.2 <- read.csv('grp_comp_2.csv')
grp.comp.3 <- read.csv('grp_comp_3.csv')
dim.comp.1 <- read.csv('dim_comp_1.csv')
dim.comp.2 <- read.csv('dim_comp_2.csv')
dim.comp.3 <- read.csv('dim_comp_3.csv')
# read in infer_unobserved
df <- read.csv('infer_unobserved.csv')
# re-numbering the components to match across models based on highest correlation (very hacky)-----
allval <- cbind(dim.comp.1$value,dim.comp.2$value,dim.comp.3$value,
grp.comp.1$value,grp.comp.2$value,grp.comp.3$value)
allcor <- allval %>% as.data.frame() %>% drop_na() %>% cor() %>% as.data.frame()
colnames(allcor) <- c('dim.comp.1','dim.comp.2','dim.comp.3',
'grp.comp.1','grp.comp.2','grp.comp.3')
rownames(allcor) <- colnames(allcor)
diag(allcor) <- -1
allcor
rownames(allcor)[which(allcor[,1] == max(allcor[4:6,1]))]
#match for dim 1
grp.comp.1_ <- get(rownames(allcor)[which(allcor[,1] == max(allcor[4:6,1]))])
allcor <- allcor[rownames(allcor) != rownames(allcor)[which(allcor[,1] == max(allcor[4:6,1]))],]
rownames(allcor)[which(allcor[,2] == max(allcor[4:5,2]))]
#match for dim 1
grp.comp.1_ <- get(rownames(allcor)[which(allcor[,1] == max(allcor[4:6,1]))])
allcor <- allcor[rownames(allcor) != rownames(allcor)[which(allcor[,1] == max(allcor[4:6,1]))],]
#match for dim 2
grp.comp.2_ <- get(rownames(allcor)[which(allcor[,2] == max(allcor[4:5,2]))])
allcor <- allcor[rownames(allcor) != rownames(allcor)[which(allcor[,2] == max(allcor[4:5,2]))],]
# match for dim 3
grp.comp.3_ <- get(rownames(allcor)[4])
grp.comp.1 <- grp.comp.1_
grp.comp.2 <- grp.comp.2_
grp.comp.3 <- grp.comp.3_
crosscor <-  allcor[1:3,4:6]
which(max(crosscor))
which(crosscor == max(crosscor),arr.ind = T)
crosscor
allcor <- allval %>% as.data.frame() %>% drop_na() %>% cor() %>% as.data.frame()
colnames(allcor) <- c('dim.comp.1','dim.comp.2','dim.comp.3',
'grp.comp.1','grp.comp.2','grp.comp.3')
rownames(allcor) <- colnames(allcor)
crosscor <-  allcor[1:3,4:6]
crosscor
# find component 1
maxind <- which(crosscor == max(crosscor),arr.ind = T)
maxind
crosscor
maxind[1]
dim.comp.1_ <- get(rownames(crosscor)[maxiind[1]])
dim.comp.1_ <- get(rownames(crosscor)[maxind[1]])
grp.comp.2_ <- get(colnames(crosscor)[maxind[2]])
crosscor[!maxind[1]]
crosscor[!maxind[1],]
crosscor[-maxind[1],-maxind[2]]
crosscor <-  allcor[1:3,4:6]
# find component 1
maxind <- which(crosscor == max(crosscor),arr.ind = T)
dim.comp.1_ <- get(rownames(crosscor)[maxind[1]])
grp.comp.1_ <- get(colnames(crosscor)[maxind[2]])
crosscor <- crosscor[-maxind[1],-maxind[2]]
# find component 2
maxind <- which(crosscor == max(crosscor),arr.ind = T)
dim.comp.2_ <- get(rownames(crosscor)[maxind[1]])
grp.comp.2_ <- get(colnames(crosscor)[maxind[2]])
crosscor
crosscor <- crosscor[-maxind[1],-maxind[2]]
crosscor
crosscor <-  allcor[1:3,4:6] %>% as.data.frame()
crosscor
maxind <- which(crosscor == max(crosscor),arr.ind = T)
dim.comp.1_ <- get(rownames(crosscor)[maxind[1]])
grp.comp.1_ <- get(colnames(crosscor)[maxind[2]])
crosscor <- crosscor[-maxind[1],-maxind[2]]
# find component 2
maxind <- which(crosscor == max(crosscor),arr.ind = T)
dim.comp.2_ <- get(rownames(crosscor)[maxind[1]])
grp.comp.2_ <- get(colnames(crosscor)[maxind[2]])
crosscor <- crosscor[-maxind[1],-maxind[2]]
crosscor
3-maxind
dim.comp.3 <- dim.comp.3_
runApp()
runApp()
